[pa_test]
size_x: 100
#    X dimension tower size  (mm)
size_y: 50
#    Y dimension tower size  (mm)
height: 50
#   Height of tower (mm)
origin_x: 150
#   Center of the bed in x
origin_y: 150
#   Center of the bed in y
layer_height: 0.20
first_layer_height: 0.24
perimeters: 2
#   Number of perimeters to be printed for the tower
brim_width: 10
#   Width of brim (mm)
slow_velocity: 20
#   Start velocity for PA test segment (mm/s)
medium_velocity: 200
#   Medium velocity for PA test segment (mm/s)
fast_velocity: 400
#   End velocity for PA test segment (mm/s)
filament_diameter: 1.75

[delayed_gcode start_pa_test]
gcode:
    {% set vars = printer["gcode_macro RUN_PA_TEST"] %}
    
    G90							   		; use absolute coordinates
	M83  						   		; Make the E relative independant of other axis
    M104 S150                           ; preheat nozzle to 150c
    M106 S102                           ; turn on cooling fans for preheat
	M140 S{vars.bed_temp}	                ; set bed temp

    M117 Homing...
    CG28                                ; home if not already homed 
    
	M117 Heating...
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z2 F18000             ; Move hotend a sufficent distance from heatbed for heatsoak
	M190 S{vars.bed_temp}	                ; wait for bed to reach temp

    M106 S0                             ; turn off cooling fans for motor sync
    SYNC_MOTORS                         ; sync AWD motors after preheat
    M106 S102                           ; turn cooling fans on for remaineder of startup

    WIPE_NOZZLE                         ; wipe nozzle before beacon calibrates

    G28 Z METHOD=CONTACT CALIBRATE=1
    FAST_Z_TILT                          ; adjust for heatsoak

	M117 Performing Bed Mesh...
    BED_MESH_CALIBRATE RUNS=2			; perform bed mesh calibration
	BED_MESH_PROFILE LOAD=default

    WIPE_NOZZLE

    M117 Homing Z...
    G28 Z METHOD=CONTACT CALIBRATE=0    ; Homing Z 

    M117 Final Heating...
    G0 X252 Y309 Z7 F18000              ; Move hotend a sufficent distance from heatbed for heatsoak
    M109 S{vars.hotend_temp}		            ; wait for extruder to reach temp

    M117 Cleaning Nozzle...
    CLEAN_NOZZLE                        ; Clean print nozzle

    # set nozzle thermal expansion offset
    {% if printer.configfile.settings.beacon is defined %}
        _BEACON_SET_NOZZLE_TEMP_OFFSET 
    {% endif %}

	M117 Starting Print...
    M106 S102                           ; turn fans off for start of print
    #LINE_PURGE

    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

    SET_VELOCITY_LIMIT ACCEL=15000
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=20
    
    SKEW_PROFILE LOAD=calilantern_skew_profile

	M117 Printing...

    {% set flow_percent = vars.flow_rate|float * 100.0 %}
    {% if flow_percent > 0 %}
        M221 S{flow_percent}
    {% endif %}
    {% set height = printer.configfile.settings.pa_test.height %}
    {% set pavalue = vars.pa_value %}
    ; If pa_value is 0 then we test the full pa range starting from 0
    {% if  vars.pa_value == 0 %}
        {% if vars.testparam == 0 %}
            TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.001 ; .01 for bowden
        {% elif vars.testparam == 1 %}
            TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=OFFSET START=0 FACTOR=.01 ; .02 for bowden
        {% elif vars.testparam == 2 %}
            TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=TIME_OFFSET START=0 FACTOR=.0001
        {% endif %}
    {% else %}
        ; make sure that delta and start can not be lower then 0
        {% if (vars.pa_value - vars.pa_range <= 0) and (vars.testparam <= 2) %}
            {% set delta = vars.pa_range %}
            {% set start = 0 %}
        {% else %}
            ; calculate the pa range that we want to test
            {% set delta = (vars.pa_value + vars.pa_range)  - (vars.pa_value - vars.pa_range)  %}
            ; calculate the pa start value
            {% set start = vars.pa_value - vars.pa_range %}
        {% endif %}
        {% if vars.testparam == 0 %}
            TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START={start} FACTOR={delta / height}
        {% elif vars.testparam == 1 %}
            TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=OFFSET START={start} FACTOR={delta / height}
        {% elif vars.testparam == 2 %}
            TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=TIME_OFFSET START={start} FACTOR={delta / height}
        {% endif %}
    {% endif %}
    ; PRINT_PA_TOWER must be the last command in the start_pa_test script:
    ; it starts a print and then immediately returns without waiting for the print to finish
    PRINT_PA_TOWER {vars.rawparams} FINAL_GCODE_ID=end_pa_test

[delayed_gcode end_pa_test]
gcode:
    END_PRINT
    RESTORE_GCODE_STATE NAME=PA_TEST_STATE

[gcode_macro RUN_PA_TEST]
variable_bed_temp: -1
variable_hotend_temp: -1
variable_pa_value: 0             # Used for further tuning of pa value. If value is not 0 than the tested pa value will only be +/- (determined by the pa_range variable) around of the pa_value variable
variable_pa_range: 0.03          # Only use if pa_value is set to heigher than 0. Used to set the +/- area around pa_value that should be tested
variable_flow_rate: -1
variable_testparam: 0            # 0 = advance, 1 = offset, 2 = time_offset
variable_rawparams: ''
gcode:
    # Fail early if the required parameters are not provided
    {% if params.NOZZLE is not defined %}
    {action_raise_error('NOZZLE= parameter must be provided')}
    {% endif %}
    {% if params.TARGET_TEMP is not defined %}
    {action_raise_error('TARGET_TEMP= parameter must be provided')}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=bed_temp VALUE={params.BED_TEMP|default(60)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=hotend_temp VALUE={params.TARGET_TEMP}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=pa_value VALUE={params.PA_VALUE|default(0)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=pa_range VALUE={params.PA_RANGE|default(0.01)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=flow_rate VALUE={params.FLOW_RATE|default(-1)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=testparam VALUE={params.TESTPARAM|default(0)}
    SET_GCODE_VARIABLE MACRO=RUN_PA_TEST VARIABLE=rawparams VALUE="'{rawparams}'"
    SAVE_GCODE_STATE NAME=PA_TEST_STATE
    UPDATE_DELAYED_GCODE ID=start_pa_test DURATION=0.01

[ringing_test]
size: 100
#   X-Y Size of tower footprint (mm)
height: 60
#   Height of of tower (mm)
band: 5
#   Height for each ringing step (mm)
perimeters: 2
#   Number of perimeters to be printed for the tower
velocity: 200
#   Is the velocity one must use as V in a formula V * N / D when
#   calculating the resonance frequency. N and D are the number of
#   oscillations and the distance between them as usual:
brim_velocity: 60
#   Speed for brim printing in (mm/s)
accel_start: 10000
#   The acceleration of the start of the test
accel_step: 500
#   The increment of the acceleration every `band` (mm/s^2)
layer_height: 0.20
first_layer_height: 0.24
filament_diameter: 1.75

#   Parameters that are computed automatically, but may be adjusted if necessary

#center_x:
#   Center of the bed by default (if detected correctly)
#center_y:
#   Center of the bed by default (if detected correctly)
#brim_width:
#   Computed based on the model size, but may be increased

#   Parameters that are better left at their default values

#notch: 1
#   Size of the notch in mm
#notch_offset:
#   0.275 * size by default
#deceleration_points: 100

[delayed_gcode start_ringing_test]

gcode:
    {% set vars = printer["gcode_macro RUN_RINGING_TEST"] %}

	G90							   		; use absolute coordinates
	M83  						   		; Make the E relative independant of other axis
    M104 S150                           ; preheat nozzle to 150c
    M106 S102                           ; turn on cooling fans for preheat
	M140 S{vars.bed_temp}	                ; set bed temp

    M117 Homing...
    CG28                                ; home if not already homed 
    
	M117 Heating...
    G0 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_maximum.y/2} Z2 F18000             ; Move hotend a sufficent distance from heatbed for heatsoak
	M190 S{vars.bed_temp}	                ; wait for bed to reach temp

    M106 S0                             ; turn off cooling fans for motor sync
    SYNC_MOTORS                         ; sync AWD motors after preheat
    M106 S102                           ; turn cooling fans on for remaineder of startup

    WIPE_NOZZLE                         ; wipe nozzle before beacon calibrates

    G28 Z METHOD=CONTACT CALIBRATE=1
    FAST_Z_TILT                          ; adjust for heatsoak

	M117 Performing Bed Mesh...
    BED_MESH_CALIBRATE RUNS=2			; perform bed mesh calibration
	BED_MESH_PROFILE LOAD=default

    WIPE_NOZZLE

    M117 Homing Z...
    G28 Z METHOD=CONTACT CALIBRATE=0    ; Homing Z 

    M117 Final Heating...
    G0 X252 Y309 Z7 F18000              ; Move hotend a sufficent distance from heatbed for heatsoak
    M109 S{vars.hotend_temp}		            ; wait for extruder to reach temp

    M117 Cleaning Nozzle...
    CLEAN_NOZZLE                        ; Clean print nozzle

    # set nozzle thermal expansion offset
    {% if printer.configfile.settings.beacon is defined %}
        _BEACON_SET_NOZZLE_TEMP_OFFSET 
    {% endif %}

	M117 Starting Print...
    M106 S102                           ; turn fans off for start of print
    #LINE_PURGE

    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=1

    SET_VELOCITY_LIMIT ACCEL=15000
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=20
    
    SKEW_PROFILE LOAD=calilantern_skew_profile

	M117 Printing...

    {% set flow_percent = vars.flow_rate|float * 100.0 %}
    {% if flow_percent > 0 %}
    M221 S{flow_percent}
    {% endif %}
    {% set layer_height = vars.nozzle * 0.5 %}
    {% set first_layer_height = layer_height * 1.25 %}
    PRINT_RINGING_TOWER {vars.rawparams} LAYER_HEIGHT={layer_height} FIRST_LAYER_HEIGHT={first_layer_height} FINAL_GCODE_ID=end_ringing_test

[delayed_gcode end_ringing_test]
gcode:
    
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    
    SET_FILAMENT_SENSOR SENSOR=switch_sensor ENABLE=0
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0

    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F20000  ; park nozzle at rear        
   
    G1 E-45 F3600                   

    TURN_OFF_HEATERS
    M107                                     ; turn off fans

    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    
    M117 Idle

    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
    BED_MESH_CLEAR
    BED_MESH_PROFILE REMOVE="default"
    SET_SKEW CLEAR=1
    Set_Speed

    # reset nozzle thermal expansion offset
    {% if printer.configfile.settings.beacon is defined %}
        _BEACON_REMOVE_NOZZLE_TEMP_OFFSET
        _BEACON_SET_NOZZLE_TEMP_OFFSET RESET=True
    {% endif %}

    RESTORE_GCODE_STATE NAME=RINGING_TEST_STATE

[gcode_macro RUN_RINGING_TEST]
variable_bed_temp: -1
variable_hotend_temp: -1
variable_nozzle: -1
variable_flow_rate: -1
variable_rawparams: ''
gcode:
    # Fail early if the required parameters are not provided
    {% if params.NOZZLE is not defined %}
    {action_raise_error('NOZZLE= parameter must be provided')}
    {% endif %}
    {% if params.TARGET_TEMP is not defined %}
    {action_raise_error('TARGET_TEMP= parameter must be provided')}
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=bed_temp VALUE={params.BED_TEMP|default(60)}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=hotend_temp VALUE={params.TARGET_TEMP}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=nozzle VALUE={params.NOZZLE}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=flow_rate VALUE={params.FLOW_RATE|default(-1)}
    SET_GCODE_VARIABLE MACRO=RUN_RINGING_TEST VARIABLE=rawparams VALUE="'{rawparams}'"
    SAVE_GCODE_STATE NAME=RINGING_TEST_STATE
    UPDATE_DELAYED_GCODE ID=start_ringing_test DURATION=0.01