[save_variables]
filename: ~/printer_data/config/variables.txt

[include Machine Configs/*.cfg]
[include Macros/*.cfg]
#[include config_backup.cfg]

[respond]

[exclude_object]

[skew_correction]

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_320036001350324E31333220-if00
restart_method: command

#[mcu tinyfan]
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E6625887D31A6031-if00

[idle_timeout]
timeout: 1800

[force_move]
enable_force_move: True

[resonance_tester]
accel_chip: beacon
probe_points:
    150, 150, 20
accel_per_hz:145

[input_shaper]
#shaper_type_x: mzv
#shaper_freq_x: 107.6
#damping_ratio_x: 0.053

#shaper_type_y: mzv
#shaper_freq_y: 77.0
#damping_ratio_y: 0.039

[beacon]
serial: /dev/serial/by-id/usb-Beacon_Beacon_RevH_D003AEA35154354D38202020FF0A0D0B-if00
x_offset: -23.5 # update with offset from nozzle on your machine
y_offset: 0 # update with offset from nozzle on your machine
accel_axes_map: y, x, z
mesh_main_direction: x
mesh_runs: 2

contact_max_hotend_temperature: 275

home_xy_position: 150, 150
home_z_hop: 5
home_z_hop_speed: 10
home_xy_move_speed: 500
home_method: proximity # use proximity for induction homing
home_method_when_homed: proximity # after initial calibration use induction
home_autocalibrate: unhomed # contact will calibrate beacon on first home
home_y_before_x: True

[motors_sync]
axes: x,y
#    Axes on which calibration will be performed.
accel_chip: beacon
#    Accelerometer for vibrations collection: adxl345 / mpu9250 etc.
#encoder_chip_<axis>:
#    Axis, assigned encoder name, for measuring deviations.
chip_filter: median
#    Filter type for data from the accelerometer: 'median' works well in
#    most cases, but some particularly noisy printers (fans, etc.) may
#    require a more powerful filter - 'kalman'. On lis2dw filters disabled.
median_size: 5
#    Median filter window size.
#kalman_coeffs: 1.1, 1., 1e-1, 1e-2, .5, 1.
#    Simple coefficients describing the kalman filter.
#microsteps: 16
#    Maximum microstepping displacement of the stepper motor rotor.
sync_method: alternately
#    Methods for synchronizing two axes on interconnected kinematics:
#    'alternately' - the axes calibrated alternately, step by step. (default)
#    'synchronous' - the axes calibrated depending on their magnitude,
#    trying to keep it at the same level.
#    Methods for synchronizing axis/axes on NOT-interconnected kinematics:
#    'sequential' - axes are calibrated sequentially. (default)
#steps_model: linear, 20000, 0
#    Mathematical model and its coefficients representing the dependence
#    of stepper motor microstep displacement on the measured magnitude.
max_step_size: 6
#    The maximum number of microsteps that the motor can take move at time,
#    to achieve the planned magnitude.
axes_steps_diff: 7
#    The difference in the positions of the motors in microsteps between
#    the two axes, to update the magnitude of the secondary axis. It is
#    used in the synchronous method, or in the process of axis alignment
#    in the alternately method. The typical value is max_step_size + 1.
retry_tolerance: 1000
#    The forced threshold to which a pair of stepper motors on one belt
#    will have to lower the magnitude of the oscillations. It's recommended
#    to configure in order to filter possible inaccuracies. After several
#    iterations of starting synchronization, you will find the edge, to
#    which this parameter should be omitted.
retries: 10
#    The maximum number of repetitions to achieve the forced threshold of
#    oscillations.
#head_fan: hotend_fan
#    Toolhead fan, which will be turned off during sync to eliminate noise.

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 43.914
#*# pid_ki = 1.687
#*# pid_kd = 285.714
#*# pid_version = 1
#*# pid_target = 110.00
#*# pid_tolerance = 0.0200
#*#
#*# [beacon model default]
#*# model_coef = 1.4888433089924233,
#*# 	1.8394372618209738,
#*# 	0.8344935180810938,
#*# 	0.45025395520212985,
#*# 	0.23523466166517437,
#*# 	0.019419121085923648,
#*# 	-0.11855470073309603,
#*# 	0.03088455657905036,
#*# 	0.1596100495356245,
#*# 	0.06162787245834994
#*# model_domain = 1.832160714782537e-07,1.9304630324598285e-07
#*# model_range = 0.200000,5.000000
#*# model_temp = 42.842506
#*# model_offset = 0.00000
#*#
#*# [extruder]
#*# control = mpc
#*# block_heat_capacity = 33.7011
#*# sensor_responsiveness = 0.125742
#*# ambient_transfer = 0.0848904
#*# fan_ambient_transfer = 0.0848904, 0.123518, 0.238171, 0.276851, 0.298971, 0.317592, 0.331809, 0.343824, 0.343549, 0.354412, 0.358196
#*#
#*# [telemetry]
#*# enabled = True
#*#
#*# [motors_sync]
#*# steps_model_x = quadratic,
#*# 	44.63681357274554,
#*# 	2474.7765615686585,
#*# 	1956.5790611291395
#*# steps_model_y = quadratic,
#*# 	44.63681357274554,
#*# 	2474.7765615686585,
#*# 	1956.5790611291395
